@model List<WebsiteOpcUa.Models.Item>


<h1>Simulation Data</h1>
@if (ViewBag.Message != null)
{
    <div class="alert alert-info">@ViewBag.Message</div>
}
<!-- Tabela danych -->
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Value</th>
        </tr>
    </thead>
    <tbody id="data-table-body">
        <!-- Dane będą dynamicznie wstawiane tutaj -->
    </tbody>
</table>

<div class="d-flex align-items-center">
    <label class="me-2" for="inputField">Set the heater power:</label>
    <form id="heaterForm" class="d-flex align-items-center">
        <input type="text" id="inputValue" name="inputValue" class="form-control me-2" style="width: 150px;" />
        <button type="button" id="submitButton" class="btn btn-primary">Update</button>
    </form>
</div>


<!-- Miejsce na wykres -->
<canvas id="myChart" width="100" height="50"></canvas>

<!-- Załadowanie bibliotek -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        // Funkcja do wysyłania danych
        function sendData() {
            // Pobranie wartości inputa
            var inputValue = $('#inputValue').val();

            // Wysłanie żądania AJAX do kontrolera
            $.ajax({
                url: '/Simulation/SubmitAction', // Zmodyfikuj adres URL w zależności od kontrolera i akcji
                type: 'POST',
                data: {
                    inputValue: inputValue
                },
                complete: function () {
                    // Możesz tu dodać kod, który ma być wykonany po zakończeniu
                }
            });
        }

        // Obsługa kliknięcia przycisku
        $('#submitButton').click(function () {
            sendData();
        });

        // Obsługa naciśnięcia klawisza Enter
        $('#inputValue').keypress(function (e) {
            if (e.which == 13) { // 13 to kod klawisza Enter
                e.preventDefault(); // Zapobiegaj domyślnemu działaniu
                sendData();
            }
        });
    });
    let chart; // Zmienna globalna dla wykresu
    let chartData = {
        labels: [], // Tablica na etykiety (np. timestamps)
        datasets: [{
            label: 'Wartość u_Int',
            data: [], // Tablica na dane
            borderColor: 'rgba(75, 192, 192, 1)',
            backgroundColor: 'rgba(75, 192, 192, 0.2)',
            borderWidth: 1,
            fill: false
        }]
    };

    // Funkcja inicjalizująca wykres
    function createChart() {
        const ctx = document.getElementById('myChart').getContext('2d');
        chart = new Chart(ctx, {
            type: 'line',  // Typ wykresu
            data: chartData,
            options: {
                scales: {
                    x: {
                        display: true,
                        title: {
                            display: true,
                            text: 'Czas / Indeks'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Wartość'
                        }
                    }
                }
            }
        });
    }

    // Funkcja do aktualizowania wykresu
    function updateChart(newLabel, newValue) {


    
        if (chart.data.labels.length > 100) {
            chart.data.labels.shift(); 
            chart.data.datasets[0].data.shift(); 

        }
        chart.data.labels.push(newLabel);  
        chart.data.datasets[0].data.push(newValue); 

        chart.update(); 
    }

    // Funkcja do aktualizowania tabeli
    function updateTable() {
        $.ajax({
            url: '@Url.Action("GetData", "Simulation")',
            type: 'GET',
            success: function (data) {
                // Czyścimy tabelę
                $('#data-table-body').empty();

                data.forEach(function (item) {
                    // Tworzymy podstawowy wiersz
                    let row = `
                            <tr>
                                <td>${item.name}</td>
                                <td>${item.value}</td>
                            </tr>`;


                    if (item.name === "y") {

                        updateChart(new Date().toLocaleTimeString(), item.value);
                    }

                    // Dodajemy wiersz do tabeli
                    $('#data-table-body').append(row);
                });
            },
        });
    }

    // Pierwsze uruchomienie i inicjalizacja wykresu
    $(document).ready(function () {
        createChart(); // Tworzymy wykres
        updateTable(); // Aktualizujemy tabelę i wykres po pierwszym ładowaniu
        setInterval(updateTable, 3000); // Odświeżamy dane co 1 sekundę
    });
</script>
